rm(list = ls()[!ls() %in% c("ASVTABLE","my_asv_table","my_min_rel_abund", "my_minimum_detection", "outdirectory", "my_model", "my_output", "my_sample_data", "feature_aucs")])
countMatrixByROCThreshold <- readRDS(file = paste0(outdirectory, ASVTABLE, "_MAP_md", my_minimum_detection, "_RAmd", my_min_rel_abund, "/countMatrixByROCThreshold.rds"))
featureAUCsForHist = readRDS(paste0(outdirectory, ASVTABLE, "_MAP_md", my_minimum_detection, "_RAmd", my_min_rel_abund, "/featureAUCsForHist.rds"))
# allHumanASVs = my_asv_table
# choose AUC threshold for "top discriminatory taxa" to cover:
topASVsINPUT = featureAUCsForHist[featureAUCsForHist$feature_aucs > 0.6, ] # change threshold as you like
# featureScoreMatrix <- my_output$score_per_feature_per_sample
# sample_table = data.frame(t(my_output$sample_by_sample))
tmp=dyads_for_coverage(ASVs_to_cover = topASVsINPUT$ASV,  # list of names
perform_NBC_output = my_output,
sampleConcordanceMatrix=countMatrixByROCThreshold,
allHumanASVs = my_asv_table,
limit_of_detection=0,
case_class_name = "asthmatic",
ctrl_class_name = "healthy",
PWCtype="proportion")
rm(list = ls()[!ls() %in% c("ASVTABLE","my_asv_table","my_min_rel_abund", "my_minimum_detection", "outdirectory", "my_model", "my_output", "my_sample_data", "feature_aucs")])
countMatrixByROCThreshold <- readRDS(file = paste0(outdirectory, ASVTABLE, "_MAP_md", my_minimum_detection, "_RAmd", my_min_rel_abund, "/countMatrixByROCThreshold.rds"))
featureAUCsForHist = readRDS(paste0(outdirectory, ASVTABLE, "_MAP_md", my_minimum_detection, "_RAmd", my_min_rel_abund, "/featureAUCsForHist.rds"))
# allHumanASVs = my_asv_table
# choose AUC threshold for "top discriminatory taxa" to cover:
topASVsINPUT = featureAUCsForHist[featureAUCsForHist$feature_aucs > 0.6, ] # change threshold as you like
# featureScoreMatrix <- my_output$score_per_feature_per_sample
# sample_table = data.frame(t(my_output$sample_by_sample))
tmp=dyads_for_coverage(ASVs_to_cover = topASVsINPUT$ASV,  # list of names
perform_NBC_output = my_output,
sampleConcordanceMatrix=countMatrixByROCThreshold,
allHumanASVs = my_asv_table,
limit_of_detection=0,
case_class_name = "asthmatic",
ctrl_class_name = "healthy")
tmp
library(beepr)
beep("mario")
unique(tmp$Case)
rm(list = ls()[!ls() %in% c("ASVTABLE","my_asv_table","my_min_rel_abund", "my_minimum_detection", "outdirectory", "my_model", "my_output", "my_sample_data", "feature_aucs")])
countMatrixByROCThreshold <- readRDS(file = paste0(outdirectory, ASVTABLE, "_MAP_md", my_minimum_detection, "_RAmd", my_min_rel_abund, "/countMatrixByROCThreshold.rds"))
featureAUCsForHist = readRDS(paste0(outdirectory, ASVTABLE, "_MAP_md", my_minimum_detection, "_RAmd", my_min_rel_abund, "/featureAUCsForHist.rds"))
# allHumanASVs = my_asv_table
# choose AUC threshold for "top discriminatory taxa" to cover:
topASVsINPUT = featureAUCsForHist[featureAUCsForHist$feature_aucs > 0.6, ] # change threshold as you like
# featureScoreMatrix <- my_output$score_per_feature_per_sample
# sample_table = data.frame(t(my_output$sample_by_sample))
bestPairsForCoverage=dyads_for_coverage(ASVs_to_cover = topASVsINPUT$ASV,  # list of names
perform_NBC_output = my_output,
sampleConcordanceMatrix=countMatrixByROCThreshold,
allHumanASVs = my_asv_table,
limit_of_detection=0,
case_class_name = "asthmatic",
ctrl_class_name = "healthy")
bestPairsForCoverage
unique(bestPairsForCoverage$Case)
unique(bestPairsForCoverage$Ctrl)
rm(list = ls())
library(DESeq2)
library(biomaRt)
library(gage)
data(kegg.gs)
library(gageData)
library(GO.db)
library(fgsea)
library(ggplot2)
library(gplots)
resHO_AO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHO_AO.rds")
resHN_HO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHN_HO.rds")
resAN_AO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resAN_AO.rds")
resHN_AN <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHN_AN.rds")
# prepare to run fgsea
no_perm <- 1000000
set.seed(190401)
#Load Databases
#Load databases
kegg.mouse<-kegg.gsets("mouse")
kegg.sig.mm<-kegg.mouse$kg.sets[kegg.mouse$sig.idx]
kegg.met.mm<-kegg.mouse$kg.sets[kegg.mouse$met.idx]
kegg.dise.mm<-kegg.mouse$kg.sets[kegg.mouse$dise.idx]
go.mouse<-go.gsets(species="mouse")
go.mm<-go.mouse$go.sets[go.mouse$go.subs$BP]
# go.mm.CC<-go.mouse$go.sets[go.mouse$go.subs$CC]
# go.mm.MF<-go.mouse$go.sets[go.mouse$go.subs$MF]
count_data_raw <- readRDS(file = "/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/count_data_raw.rds")
resHO_AO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHO_AO.rds")
resHN_HO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHN_HO.rds")
resAN_AO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resAN_AO.rds")
resHN_AN <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHN_AN.rds")
count_data_raw <- readRDS(file = "/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/count_data_raw.rds")
genemap = readRDS(file = "genemap.rds")
sampleTable <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/sampleData_rnaSeq.rds")
HNsamples<-row.names(subset(sampleTable, group=="HealthyNone"))
ANsamples<-row.names(subset(sampleTable, group=="AsthmaticNone"))
HOsamples<-row.names(subset(sampleTable, group=="HealthyOVA"))
AOsamples<-row.names(subset(sampleTable, group=="AsthmaticOVA"))
DEseq_output<-resAN_AO
##filter samples to the samples beween Ashma-NoChal and Asthma-Ova, for genes that occur more than twice in either the AO or the AN samples
filtered_samples<-row.names(count_data_raw)[apply(count_data_raw[,AOsamples]>0, 1, sum)>2 | apply(count_data_raw[,ANsamples]>0, 1, sum)>2]
DEseq_output<-DEseq_output[filtered_samples,] #leaves 27048 currently
list_of_genes<-cbind(genemap[row.names(DEseq_output), "entrezgene_id"], DEseq_output[,"log2FoldChange"])
colnames(list_of_genes)<-c("entrezgene_id","stat")
list_of_genes<-list_of_genes[!is.na(list_of_genes[,1]), ]
row.names(list_of_genes)<-list_of_genes[,"entrezgene_id"]
head(list_of_genes)
list_of_genes
DEseq_output<-resAN_AO
##filter samples to the samples beween Ashma-NoChal and Asthma-Ova, for genes that occur more than twice in either the AO or the AN samples
filtered_samples<-row.names(count_data_raw)[apply(count_data_raw[,AOsamples]>0, 1, sum)>2 | apply(count_data_raw[,ANsamples]>0, 1, sum)>2]
DEseq_output<-DEseq_output[filtered_samples,] #leaves 27048 currently
list_of_genes<-cbind(genemap[row.names(DEseq_output), "entrezgene_id"], DEseq_output[,"log2FoldChange"])
colnames(list_of_genes)<-c("entrezgene_id","stat")
list_of_genes<-list_of_genes[!is.na(list_of_genes[,1]), ]
row.names(list_of_genes)<-list_of_genes[,"entrezgene_id"]
head(list_of_genes)
list_of_genes
DEseq_output
count_data_raw[,AOsamples]
##filter samples to the samples beween Ashma-NoChal and Asthma-Ova, for genes that occur more than twice in either the AO or the AN samples
filtered_samples<-row.names(count_data_raw)[apply(count_data_raw[,AOsamples]>0, 1, sum)>2 | apply(count_data_raw[,ANsamples]>0, 1, sum)>2]
filtered_samples
DEseq_output<-DEseq_output[filtered_samples,] #leaves 27048 currently
DEseq_output
list_of_genes<-cbind(genemap[row.names(DEseq_output), "entrezgene_id"], DEseq_output[,"log2FoldChange"])
list_of_genes
colnames(list_of_genes)<-c("entrezgene_id","stat")
list_of_genes
list_of_genes<-list_of_genes[!is.na(list_of_genes[,1]), ]
list_of_genes
DEseq_output
names(genemap)
genemap[row.names(DEseq_output), "entrezgene_id"]
row.names(DEseq_output)
head(genemap)
resHO_AO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHO_AO.rds")
resHN_HO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHN_HO.rds")
resAN_AO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resAN_AO.rds")
resHN_AN <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHN_AN.rds")
count_data_raw <- readRDS(file = "/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/count_data_raw.rds")
genemap = readRDS(file = "genemap.rds")
ensemble_inc_names<-intersect(row.names(resHN_AN),genemap[,"ensembl_gene_id"])
genemap<-genemap[genemap$ensembl_gene_id %in% ensemble_inc_names,]
genemap_all_ENS <- genemap[!duplicated(genemap$ensembl_gene_id),]
row.names(genemap_all_ENS)<-genemap_all_ENS$ensembl_gene_id
genemap<-genemap[!is.na(genemap$entrezgene),]
genemap<-genemap[!duplicated(genemap$ensembl_gene_id),]
genemap<-genemap[!duplicated(genemap$entrezgene),]
row.names(genemap)<-genemap$ensembl_gene_id
genemap_ENZ<-genemap
row.names(genemap_ENZ)<-genemap$entrezgene
sampleTable <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/sampleData_rnaSeq.rds")
HNsamples<-row.names(subset(sampleTable, group=="HealthyNone"))
ANsamples<-row.names(subset(sampleTable, group=="AsthmaticNone"))
HOsamples<-row.names(subset(sampleTable, group=="HealthyOVA"))
AOsamples<-row.names(subset(sampleTable, group=="AsthmaticOVA"))
##Run fgsea on AN_AO
#Prepare data
DEseq_output<-resAN_AO
##filter samples to the samples beween Ashma-NoChal and Asthma-Ova, for genes that occur more than twice in either the AO or the AN samples
filtered_samples<-row.names(count_data_raw)[apply(count_data_raw[,AOsamples]>0, 1, sum)>2 | apply(count_data_raw[,ANsamples]>0, 1, sum)>2]
DEseq_output<-DEseq_output[filtered_samples,] #leaves 27048 currently
list_of_genes<-cbind(genemap[row.names(DEseq_output), "entrezgene_id"], DEseq_output[,"log2FoldChange"])
list_of_genes<-cbind(genemap[row.names(DEseq_output), "entrezgene_id"], DEseq_output[,"log2FoldChange"])
colnames(list_of_genes)<-c("entrezgene_id","stat")
list_of_genes<-list_of_genes[!is.na(list_of_genes[,1]), ]
row.names(list_of_genes)<-list_of_genes[,"entrezgene_id"]
list_of_genes
head(list_of_genes)
list_of_genes[,2]
abs(list_of_genes[,2])
ranklist<-sort(abs(list_of_genes[,2])) # THIS IS THE KEY CHANGE - ABS(L2FC)
DEseq_output<-resHO_AO
filtered_samples<-row.names(count_data_raw)[apply(count_data_raw[,HOsamples]>0, 1, sum)>2 | apply(count_data_raw[,AOsamples]>0, 1, sum)>2]
DEseq_output<-DEseq_output[filtered_samples,] #
list_of_genes<-cbind(genemap[row.names(DEseq_output), "entrezgene_id"], DEseq_output[,"log2FoldChange"])
colnames(list_of_genes)<-c("entrezgene_id","stat")
list_of_genes<-list_of_genes[!is.na(list_of_genes[,1]), ]
row.names(list_of_genes)<-list_of_genes[,"entrezgene_id"]
ranklist<-sort(abs(list_of_genes[,2])) # THIS IS THE KEY CHANGE - ABS(L2FC)
#Run fgsea on KEGG
# HO_AO_output_sig<-fgsea(pathways=kegg.sig.mm, stats=ranklist, nperm=no_perm)
# HO_AO_output_sig<-HO_AO_output_sig[order(HO_AO_output_sig$NES, decreasing=F),]
#
# HO_AO_output_met<-fgsea(pathways=kegg.met.mm, stats=ranklist, nperm=no_perm)
# HO_AO_output_met<-HO_AO_output_met[order(HO_AO_output_met$NES, decreasing=F),]
#
# HO_AO_output_dise<-fgsea(pathways=kegg.dise.mm, stats=ranklist, nperm=no_perm)
# HO_AO_output_dise<-HO_AO_output_dise[order(HO_AO_output_dise$NES, decreasing=F),]
#Run fgsea on GO
HO_AO_output_go_BP<-fgsea(pathways=go.mm, stats=ranklist, nperm=no_perm, maxSize=500, minSize=5)
HO_AO_output_go_BP<-HO_AO_output_go_BP[order(HO_AO_output_go_BP$NES, decreasing=F),]
saveRDS(HO_AO_output_go_BP, file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/HO_AO_output_go_BP.rds")
HO_AO_output_go_BP <
mm$`mmu04520 Adherens junction`, ranklist) + labs(title = "Adherens Junction")
ranklist
HO_AO_output_go_BP
beepr::beep("mario")
pdf(file = "AbsoluteEnrichment/OxidativeStressEnrichment.pdf", width = 5.25, height = 4)
plotEnrichment(go.mm$`GO:0006979 response to oxidative stres`, ranklist) + labs(title = "response to oxidative stres")
dev.off()
pdf(file = "AbsoluteEnrichment/dnaRepairEnrichment.pdf", width = 5.25, height = 4)
plotEnrichment(go.mm$`GO:0006281 DNA repair`, ranklist) + labs(title = "DNA repair")
dev.off()
pdf(file = "AbsoluteEnrichment/dnaRecombinationEnrichment.pdf", width = 5.25, height = 4)
plotEnrichment(go.mm$`GO:0006310 DNA recombination`, ranklist) + labs(title = "DNA recombination")
dev.off()
plotEnrichment(go.mm$`GO:0006979 response to oxidative stres`, ranklist) + labs(title = "response to oxidative stres")
plotEnrichment(go.mm$`GO:0006281 DNA repair`, ranklist) + labs(title = "DNA repair")
plotEnrichment(go.mm$`GO:0006310 DNA recombination`, ranklist) + labs(title = "DNA recombination")
pdf(file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/OxidativeStressEnrichment.pdf", width = 5.25, height = 4)
plotEnrichment(go.mm$`GO:0006979 response to oxidative stres`, ranklist) + labs(title = "response to oxidative stres")
dev.off()
pdf(file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/dnaRepairEnrichment.pdf", width = 5.25, height = 4)
plotEnrichment(go.mm$`GO:0006281 DNA repair`, ranklist) + labs(title = "DNA repair")
dev.off()
pdf(file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/dnaRecombinationEnrichment.pdf", width = 5.25, height = 4)
plotEnrichment(go.mm$`GO:0006310 DNA recombination`, ranklist) + labs(title = "DNA recombination")
dev.off()
# load deseq output
resHO_AO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHO_AO.rds")
resHN_HO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHN_HO.rds")
resAN_AO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resAN_AO.rds")
resHN_AN <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHN_AN.rds")
count_data_raw <- readRDS(file = "/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/count_data_raw.rds")
genemap = readRDS(file = "genemap.rds")
ensemble_inc_names<-intersect(row.names(resHN_AN),genemap[,"ensembl_gene_id"])
genemap<-genemap[genemap$ensembl_gene_id %in% ensemble_inc_names,]
genemap_all_ENS <- genemap[!duplicated(genemap$ensembl_gene_id),]
row.names(genemap_all_ENS)<-genemap_all_ENS$ensembl_gene_id
genemap<-genemap[!is.na(genemap$entrezgene),]
genemap<-genemap[!duplicated(genemap$ensembl_gene_id),]
genemap<-genemap[!duplicated(genemap$entrezgene),]
row.names(genemap)<-genemap$ensembl_gene_id
genemap_ENZ<-genemap
row.names(genemap_ENZ)<-genemap$entrezgene
sampleTable <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/sampleData_rnaSeq.rds")
HNsamples<-row.names(subset(sampleTable, group=="HealthyNone"))
ANsamples<-row.names(subset(sampleTable, group=="AsthmaticNone"))
HOsamples<-row.names(subset(sampleTable, group=="HealthyOVA"))
AOsamples<-row.names(subset(sampleTable, group=="AsthmaticOVA"))
# prepare to run fgsea
no_perm <- 1000000
set.seed(190401)
#Load Databases
#Load databases
kegg.mouse<-kegg.gsets("mouse")
rm(list = ls())
library(DESeq2)
library(vegan)
library(ggplot2)
library(ggfortify)
library(phangorn)
library(pheatmap)
library(DESeq2)
library(biomaRt)
library(gage)
data(kegg.gs)
library(gageData)
library(GO.db)
library(fgsea)
library(ggplot2)
library(gplots)
# load deseq output
resHO_AO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHO_AO.rds")
resHN_HO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHN_HO.rds")
resAN_AO <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resAN_AO.rds")
resHN_AN <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/resHN_AN.rds")
count_data_raw <- readRDS(file = "/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/count_data_raw.rds")
genemap = readRDS(file = "genemap.rds")
ensemble_inc_names<-intersect(row.names(resHN_AN),genemap[,"ensembl_gene_id"])
genemap<-genemap[genemap$ensembl_gene_id %in% ensemble_inc_names,]
genemap_all_ENS <- genemap[!duplicated(genemap$ensembl_gene_id),]
row.names(genemap_all_ENS)<-genemap_all_ENS$ensembl_gene_id
genemap<-genemap[!is.na(genemap$entrezgene),]
genemap<-genemap[!duplicated(genemap$ensembl_gene_id),]
genemap<-genemap[!duplicated(genemap$entrezgene),]
row.names(genemap)<-genemap$ensembl_gene_id
genemap_ENZ<-genemap
row.names(genemap_ENZ)<-genemap$entrezgene
sampleTable <- readRDS("/Users/naomiwilson/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/sampleData_rnaSeq.rds")
HNsamples<-row.names(subset(sampleTable, group=="HealthyNone"))
ANsamples<-row.names(subset(sampleTable, group=="AsthmaticNone"))
HOsamples<-row.names(subset(sampleTable, group=="HealthyOVA"))
AOsamples<-row.names(subset(sampleTable, group=="AsthmaticOVA"))
# prepare to run fgsea
no_perm <- 1000000
set.seed(190401)
#Load Databases
#Load databases
kegg.mouse<-kegg.gsets("mouse")
kegg.sig.mm<-kegg.mouse$kg.sets[kegg.mouse$sig.idx]
kegg.met.mm<-kegg.mouse$kg.sets[kegg.mouse$met.idx]
kegg.dise.mm<-kegg.mouse$kg.sets[kegg.mouse$dise.idx]
go.mouse<-go.gsets(species="mouse")
go.mm<-go.mouse$go.sets[go.mouse$go.subs$BP]
# go.mm.CC<-go.mouse$go.sets[go.mouse$go.subs$CC]
# go.mm.MF<-go.mouse$go.sets[go.mouse$go.subs$MF]
##Run fgsea on AN_AO
#Prepare data
DEseq_output<-resAN_AO
##filter samples to the samples beween Ashma-NoChal and Asthma-Ova, for genes that occur more than twice in either the AO or the AN samples
filtered_samples<-row.names(count_data_raw)[apply(count_data_raw[,AOsamples]>0, 1, sum)>2 | apply(count_data_raw[,ANsamples]>0, 1, sum)>2]
DEseq_output<-DEseq_output[filtered_samples,] #leaves 27048 currently
list_of_genes<-cbind(genemap[row.names(DEseq_output), "entrezgene_id"], DEseq_output[,"log2FoldChange"])
colnames(list_of_genes)<-c("entrezgene_id","stat")
list_of_genes<-list_of_genes[!is.na(list_of_genes[,1]), ]
row.names(list_of_genes)<-list_of_genes[,"entrezgene_id"]
ranklist<-sort(abs(list_of_genes[,2])) # THIS IS THE KEY CHANGE - ABS(L2FC)
#Run fgsea on KEGG
# AN_AO_output_sig<-fgsea(pathways=kegg.sig.mm, stats=ranklist, nperm=no_perm)
# AN_AO_output_sig<-AN_AO_output_sig[order(AN_AO_output_sig$NES, decreasing=F),]
#
# AN_AO_output_met<-fgsea(pathways=kegg.met.mm, stats=ranklist, nperm=no_perm)
# AN_AO_output_met<-AN_AO_output_met[order(AN_AO_output_met$NES, decreasing=F),]
#
# AN_AO_output_dise<-fgsea(pathways=kegg.dise.mm, stats=ranklist, nperm=no_perm)
# AN_AO_output_dise<-AN_AO_output_dise[order(AN_AO_output_dise$NES, decreasing=F),]
#Run fgsea on GO
AN_AO_output_go_BP<-fgsea(pathways=go.mm, stats=ranklist, nperm=no_perm, maxSize=500, minSize=5)
AN_AO_output_go_BP<-AN_AO_output_go_BP[order(AN_AO_output_go_BP$NES, decreasing=F),]
saveRDS(AN_AO_output_go_BP, file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/AN_AO_output_go_BP.rds")
# AN_AO_output_go_CC<-fgsea(pathways=go.mm.CC, stats=ranklist, nperm=no_perm, maxSize=500, minSize=5)
# AN_AO_output_go_CC<-AN_AO_output_go_CC[order(AN_AO_output_go_CC$NES, decreasing=F),]
#
# AN_AO_output_go_MF<-fgsea(pathways=go.mm.MF, stats=ranklist, nperm=no_perm, maxSize=500, minSize=5)
# AN_AO_output_go_MF<-AN_AO_output_go_MF[order(AN_AO_output_go_MF$NES, decreasing=F),]
##Run fgsea on HN_HO
#Prepare data
DEseq_output<-resHN_HO
filtered_samples<-row.names(count_data_raw)[apply(count_data_raw[,HOsamples]>0, 1, sum)>2 | apply(count_data_raw[,HNsamples]>0, 1, sum)>2]
DEseq_output<-DEseq_output[filtered_samples,] #leaves 15729
list_of_genes<-cbind(genemap[row.names(DEseq_output), "entrezgene_id"], DEseq_output[,"log2FoldChange"])
colnames(list_of_genes)<-c("entrezgene_id","stat")
list_of_genes<-list_of_genes[!is.na(list_of_genes[,1]), ]
row.names(list_of_genes)<-list_of_genes[,"entrezgene_id"]
ranklist<-sort(list_of_genes[,2])
#Run fgsea on KEGG
# HN_HO_output_sig<-fgsea(pathways=kegg.sig.mm, stats=ranklist, nperm=no_perm)
# HN_HO_output_sig<-HN_HO_output_sig[order(HN_HO_output_sig$NES, decreasing=F),]
#
# HN_HO_output_met<-fgsea(pathways=kegg.met.mm, stats=ranklist, nperm=no_perm)
# HN_HO_output_met<-HN_HO_output_met[order(HN_HO_output_met$NES, decreasing=F),]
#
# HN_HO_output_dise<-fgsea(pathways=kegg.dise.mm, stats=ranklist, nperm=no_perm)
# HN_HO_output_dise<-HN_HO_output_dise[order(HN_HO_output_dise$NES, decreasing=F),]
#Run fgsea on GO
HN_HO_output_go_BP<-fgsea(pathways=go.mm, stats=ranklist, nperm=no_perm, maxSize=500, minSize=5)
HN_HO_output_go_BP<-HN_HO_output_go_BP[order(HN_HO_output_go_BP$NES, decreasing=F),]
saveRDS(HN_HO_output_go_BP, file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/HN_HO_output_go_BP.rds")
# HN_HO_output_go_CC<-fgsea(pathways=go.mm.CC, stats=ranklist, nperm=no_perm, maxSize=500, minSize=5)
# HN_HO_output_go_CC<-HN_HO_output_go_CC[order(HN_HO_output_go_CC$NES, decreasing=F),]
#
# HN_HO_output_go_MF<-fgsea(pathways=go.mm.MF, stats=ranklist, nperm=no_perm, maxSize=500, minSize=5)
# HN_HO_output_go_MF<-HN_HO_output_go_MF[order(HN_HO_output_go_MF$NES, decreasing=F),]
##Run fgsea on HN_AN
#Prepare data
DEseq_output<-resHN_AN
filtered_samples<-row.names(count_data_raw)[apply(count_data_raw[,HNsamples]>0, 1, sum)>2 | apply(count_data_raw[,ANsamples]>0, 1, sum)>2]
DEseq_output<-DEseq_output[filtered_samples,] #leaves 15729
list_of_genes<-cbind(genemap[row.names(DEseq_output), "entrezgene_id"], DEseq_output[,"log2FoldChange"])
colnames(list_of_genes)<-c("entrezgene_id","stat")
list_of_genes<-list_of_genes[!is.na(list_of_genes[,1]), ]
row.names(list_of_genes)<-list_of_genes[,"entrezgene_id"]
ranklist<-sort(list_of_genes[,2])
#Run fgsea on KEGG
# HN_AN_output_sig<-fgsea(pathways=kegg.sig.mm, stats=ranklist, nperm=no_perm)
# HN_AN_output_sig<-HN_AN_output_sig[order(HN_AN_output_sig$NES, decreasing=F),]
#
# HN_AN_output_met<-fgsea(pathways=kegg.met.mm, stats=ranklist, nperm=no_perm)
# HN_AN_output_met<-HN_AN_output_met[order(HN_AN_output_met$NES, decreasing=F),]
#
# HN_AN_output_dise<-fgsea(pathways=kegg.dise.mm, stats=ranklist, nperm=no_perm)
# HN_AN_output_dise<-HN_AN_output_dise[order(HN_AN_output_dise$NES, decreasing=F),]
#Run fgsea on GO
HN_AN_output_go_BP<-fgsea(pathways=go.mm, stats=ranklist, nperm=no_perm, maxSize=500, minSize=5)
HN_AN_output_go_BP<-HN_AN_output_go_BP[order(HN_AN_output_go_BP$NES, decreasing=F),]
saveRDS(HN_AN_output_go_BP, file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/HN_AN_output_go_BP.rds")
# HN_AN_output_go_BP <- readRDS(file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/HN_AN_output_go_BP.rds")
# HN_AN_output_go_CC<-fgsea(pathways=go.mm.CC, stats=ranklist, nperm=no_perm, maxSize=500, minSize=5)
# HN_AN_output_go_CC<-HN_AN_output_go_CC[order(HN_AN_output_go_CC$NES, decreasing=F),]
#
# HN_AN_output_go_MF<-fgsea(pathways=go.mm.MF, stats=ranklist, nperm=no_perm, maxSize=500, minSize=5)
# HN_AN_output_go_MF<-HN_AN_output_go_MF[order(HN_AN_output_go_MF$NES, decreasing=F),]
##Run fgsea on HO_AO
#Prepare data
DEseq_output<-resHO_AO
filtered_samples<-row.names(count_data_raw)[apply(count_data_raw[,HOsamples]>0, 1, sum)>2 | apply(count_data_raw[,AOsamples]>0, 1, sum)>2]
DEseq_output<-DEseq_output[filtered_samples,] #
list_of_genes<-cbind(genemap[row.names(DEseq_output), "entrezgene_id"], DEseq_output[,"log2FoldChange"])
colnames(list_of_genes)<-c("entrezgene_id","stat")
list_of_genes<-list_of_genes[!is.na(list_of_genes[,1]), ]
row.names(list_of_genes)<-list_of_genes[,"entrezgene_id"]
ranklist<-sort(abs(list_of_genes[,2])) # THIS IS THE KEY CHANGE - ABS(L2FC)
#Run fgsea on KEGG
# HO_AO_output_sig<-fgsea(pathways=kegg.sig.mm, stats=ranklist, nperm=no_perm)
# HO_AO_output_sig<-HO_AO_output_sig[order(HO_AO_output_sig$NES, decreasing=F),]
#
# HO_AO_output_met<-fgsea(pathways=kegg.met.mm, stats=ranklist, nperm=no_perm)
# HO_AO_output_met<-HO_AO_output_met[order(HO_AO_output_met$NES, decreasing=F),]
#
# HO_AO_output_dise<-fgsea(pathways=kegg.dise.mm, stats=ranklist, nperm=no_perm)
# HO_AO_output_dise<-HO_AO_output_dise[order(HO_AO_output_dise$NES, decreasing=F),]
#Run fgsea on GO
HO_AO_output_go_BP<-fgsea(pathways=go.mm, stats=ranklist, nperm=no_perm, maxSize=500, minSize=5)
HO_AO_output_go_BP<-HO_AO_output_go_BP[order(HO_AO_output_go_BP$NES, decreasing=F),]
saveRDS(HO_AO_output_go_BP, file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/HO_AO_output_go_BP.rds")
beepr::beep("mario")
# HO_AO_output_go_BP <- readRDS(file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/HO_AO_output_go_BP.rds")
# HO_AO_output_go_CC<-fgsea(pathways=go.mm.CC, stats=ranklist, nperm=no_perm, maxSize=500, minSize=5)
# HO_AO_output_go_CC<-HO_AO_output_go_CC[order(HO_AO_output_go_CC$NES, decreasing=F),]
#
# HO_AO_output_go_MF<-fgsea(pathways=go.mm.MF, stats=ranklist, nperm=no_perm, maxSize=500, minSize=5)
# HO_AO_output_go_MF<-HO_AO_output_go_MF[order(HO_AO_output_go_MF$NES, decreasing=F),]
#Merge data
col_merge<-c("pathway", "padj", "NES")
# A<-merge(HO_AO_output_sig[,..col_merge], HN_AN_output_sig[,..col_merge], by="pathway")
# B<-merge(HN_HO_output_sig[,..col_merge], AN_AO_output_sig[,..col_merge], by="pathway")
# KEGG_sig_summary<-merge(A, B, by="pathway")
# colnames(KEGG_sig_summary)<-c("pathway", "padj.HO_AO","NES.HO_AO", "padj.HN_AN", "NES.HN_AN", "padj.HN_HO","NES.HN_HO", "padj.AN_AO","NES.AN_AO")
# KEGG_sig_summary$sig_pvals <- apply(KEGG_sig_summary[,c("padj.HO_AO", "padj.HN_AN", "padj.HN_HO", "padj.AN_AO")] < 0.05, 1, sum)
#
# A<-merge(HO_AO_output_met[,..col_merge], HN_AN_output_met[,..col_merge], by="pathway")
# B<-merge(HN_HO_output_met[,..col_merge], AN_AO_output_met[,..col_merge], by="pathway")
# KEGG_met_summary<-merge(A, B, by="pathway")
# colnames(KEGG_met_summary)<-c("pathway", "padj.HO_AO","NES.HO_AO", "padj.HN_AN", "NES.HN_AN", "padj.HN_HO","NES.HN_HO", "padj.AN_AO","NES.AN_AO")
# KEGG_met_summary$sig_pvals <- apply(KEGG_met_summary[,c("padj.HO_AO", "padj.HN_AN", "padj.HN_HO", "padj.AN_AO")] < 0.05, 1, sum)
#
# A<-merge(HO_AO_output_dise[,..col_merge], HN_AN_output_dise[,..col_merge], by="pathway")
# B<-merge(HN_HO_output_dise[,..col_merge], AN_AO_output_dise[,..col_merge], by="pathway")
# KEGG_dise_summary<-merge(A, B, by="pathway")
# colnames(KEGG_dise_summary)<-c("pathway", "padj.HO_AO","NES.HO_AO", "padj.HN_AN", "NES.HN_AN", "padj.HN_HO","NES.HN_HO", "padj.AN_AO","NES.AN_AO")
# KEGG_dise_summary$sig_pvals <- apply(KEGG_dise_summary[,c("padj.HO_AO", "padj.HN_AN", "padj.HN_HO", "padj.AN_AO")] < 0.05, 1, sum)
A<-merge(HO_AO_output_go_BP[,..col_merge], HN_AN_output_go_BP[,..col_merge], by="pathway")
B<-merge(HN_HO_output_go_BP[,..col_merge], AN_AO_output_go_BP[,..col_merge], by="pathway")
GO_BP_summary<-merge(A, B, by="pathway")
colnames(GO_BP_summary)<-c("pathway", "padj.HO_AO","NES.HO_AO", "padj.HN_AN", "NES.HN_AN", "padj.HN_HO","NES.HN_HO", "padj.AN_AO","NES.AN_AO")
GO_BP_summary$sig_pvals <- apply(GO_BP_summary[,c("padj.HO_AO", "padj.HN_AN", "padj.HN_HO", "padj.AN_AO")] < 0.05, 1, sum)
saveRDS(GO_BP_summary, file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/GO_BP_summary.rds")
# GO_BP_summary <- readRDS(file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/GO_BP_summary.rds")
# A<-merge(HO_AO_output_go_CC[,..col_merge], HN_AN_output_go_CC[,..col_merge], by="pathway")
# B<-merge(HN_HO_output_go_CC[,..col_merge], AN_AO_output_go_CC[,..col_merge], by="pathway")
# GO_CC_summary<-merge(A, B, by="pathway")
# colnames(GO_CC_summary)<-c("pathway", "padj.HO_AO","NES.HO_AO", "padj.HN_AN", "NES.HN_AN", "padj.HN_HO","NES.HN_HO", "padj.AN_AO","NES.AN_AO")
# GO_CC_summary$sig_pvals <- apply(GO_CC_summary[,c("padj.HO_AO", "padj.HN_AN", "padj.HN_HO", "padj.AN_AO")] < 0.05, 1, sum)
#
# A<-merge(HO_AO_output_go_MF[,..col_merge], HN_AN_output_go_MF[,..col_merge], by="pathway")
# B<-merge(HN_HO_output_go_MF[,..col_merge], AN_AO_output_go_MF[,..col_merge], by="pathway")
# GO_MF_summary<-merge(A, B, by="pathway")
# colnames(GO_MF_summary)<-c("pathway", "padj.HO_AO","NES.HO_AO", "padj.HN_AN", "NES.HN_AN", "padj.HN_HO","NES.HN_HO", "padj.AN_AO","NES.AN_AO")
# GO_MF_summary$sig_pvals <- apply(GO_MF_summary[,c("padj.HO_AO", "padj.HN_AN", "padj.HN_HO", "padj.AN_AO")] < 0.05, 1, sum)
pdf(file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/focalAdhesionEnrichment.pdf", width = 5.25, height = 4)
plotEnrichment(kegg.sig.mm$`mmu04510 Focal adhesion`, ranklist) + labs(title="Focal Adhesion")
dev.off()
pdf(file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/ECMReceptorEnrichment.pdf", width = 5.25, height = 4)
plotEnrichment(kegg.sig.mm$`mmu04512 ECM-receptor interaction`, ranklist) + labs(title="ECM-receptor interaction")
dev.off()
pdf(file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/ECMOrganizationEnrichment.pdf", width = 5.25, height = 4)
plotEnrichment(go.mm$`GO:0030198 extracellular matrix organization`, ranklist) + labs(title="ECM matrix organization")
dev.off()
pdf(file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/WNTEnrichment.pdf", width = 5.25, height = 4)
plotEnrichment(kegg.sig.mm$`mmu04310 Wnt signaling pathway`, ranklist) + labs(title = "Wnt-Signaling Pathway")
dev.off()
pdf(file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/collagenFibril.pdf", width = 5.25, height = 4)
plotEnrichment(go.mm$`GO:0030199 collagen fibril organization`, ranklist) + labs(title = "collagen fibril organization")
dev.off()
plotEnrichment(kegg.sig.mm$`mmu04520 Adherens junction`, ranklist) + labs(title = "Adherens Junction")
pdf(file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/OxidativeStressEnrichment.pdf", width = 5.25, height = 4)
plotEnrichment(go.mm$`GO:0006979 response to oxidative stres`, ranklist) + labs(title = "response to oxidative stres")
dev.off()
pdf(file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/dnaRepairEnrichment.pdf", width = 5.25, height = 4)
plotEnrichment(go.mm$`GO:0006281 DNA repair`, ranklist) + labs(title = "DNA repair")
dev.off()
pdf(file = "~/Box/Kau Lab/Results/MARS/RNAseqAnalysis_Hgf4/withOutliers/AbsoluteEnrichment/dnaRecombinationEnrichment.pdf", width = 5.25, height = 4)
plotEnrichment(go.mm$`GO:0006310 DNA recombination`, ranklist) + labs(title = "DNA recombination")
dev.off()
HO_AO_output_go_BP[HO_AO_output_go_BP$pathway == c("GO:0006979 response to oxidative stress",
"GO:0033554 cellular response to stress",
"GO:0062197 cellular response to chemical stress",
"GO:0034599 cellular response to oxidative stress"),]
HO_AO_output_go_BP
HO_AO_output_go_BP[HO_AO_output_go_BP$pathway %in% c("GO:0006979 response to oxidative stress",
"GO:0033554 cellular response to stress",
"GO:0062197 cellular response to chemical stress",
"GO:0034599 cellular response to oxidative stress"),]
HO_AO_output_go_BP
HO_AO_output_go_BP$pathway %in% c("GO:0006979 response to oxidative stress",
"GO:0033554 cellular response to stress",
"GO:0062197 cellular response to chemical stress",
"GO:0034599 cellular response to oxidative stress")
(HO_AO_output_go_BP$pathway %in% c("GO:0006979 response to oxidative stress",
"GO:0033554 cellular response to stress",
"GO:0062197 cellular response to chemical stress",
"GO:0034599 cellular response to oxidative stress"))
HO_AO_output_go_BP[(HO_AO_output_go_BP$pathway %in% c("GO:0006979 response to oxidative stress",
"GO:0033554 cellular response to stress",
"GO:0062197 cellular response to chemical stress",
"GO:0034599 cellular response to oxidative stress")),]
HO_AO_output_go_BP[(HO_AO_output_go_BP$pathway %in% c("GO:0006979 response to oxidative stress",
"GO:0033554 cellular response to stress",
"GO:0062197 cellular response to chemical stress",
"GO:0034599 cellular response to oxidative stress")),]
HO_AO_output_go_BP[HO_AO_output_go_BP$pathway == "GO:0062197 cellular response to chemical stress",]
HO_AO_output_go_BP[HO_AO_output_go_BP$pathway == "GO:0033554 cellular response to stress",]
HO_AO_output_go_BP[HO_AO_output_go_BP$pathway == "GO:0034599 cellular response to oxidative stress",]
HO_AO_output_go_BP[(HO_AO_output_go_BP$pathway %in% c("GO:0006979 response to oxidative stress",
"GO:0033554 cellular response to stress",
"GO:0062197 cellular response to chemical stress",
"GO:0034599 cellular response to oxidative stress",
"GO:0070887 cellular response to chemical stimulus")),]
HO_AO_output_go_BP[(HO_AO_output_go_BP$pathway %in% c("GO:0006979 response to oxidative stress",
"GO:0033554 cellular response to stress",
"GO:0062197 cellular response to chemical stress",
"GO:0034599 cellular response to oxidative stress",
"GO:0070887 cellular response to chemical stimulus",
"GO:0033554 cellular response to stress",
"GO:0006950 response to stress")),]
